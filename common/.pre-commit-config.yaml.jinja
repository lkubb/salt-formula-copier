# vim: ft=yaml
---
repos:
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        name: Check shell scripts with shellcheck
        files: ^.*\.(sh|bash|ksh)$
        types: []
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Check YAML syntax with yamllint
        args: [--strict]
        types: [file]
        # Files to include
        # 1. Obvious YAML files
        # 2. `pillar.example` and similar files
        # 3. SLS files under directory `test/` which are pillar files
        # Files to exclude
        # 1. SLS files under directory `test/` which are state files
        # 2. `kitchen.vagrant.yml`, which contains Embedded Ruby (ERB) template syntax
        # 3. YAML files heavily reliant on Jinja
        files: |
          (?x)^(
                .*\.yaml|
                .*\.yml|
                \.salt-lint|
                \.yamllint|
                .*\.example|
          )$
        exclude: |
          (?x)^(
                .copier-answers.yml|
          )$
  - repo: https://github.com/warpnet/salt-lint
    rev: v0.9.2
    hooks:
      - id: salt-lint
        name: Check Salt files using salt-lint
        files: ^.*\.(sls|jinja|j2|tmpl|tst)$
{!- if extmods !}
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.0
    hooks:
      - id: pyupgrade
        name: Rewrite Code to be Py{= python_requires[:2] | join(".") =}+
        args: [
          --py{= python_requires[:2] | join("") =}-plus,
        ]
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        additional_dependencies: ['toml']
        files: >
          (?x)(
            _modules/.*|
            _states/.*
          )
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: blacken Python code
        files: >
          (?x)(
            _modules/.*|
            _states/.*
          )
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        name: Run bandit against modules
        args: [--silent, -lll]
        files: >
          (?x)(
            _modules/.*|
            _states/.*
          )

  - repo: local
    hooks:
      - id: check-docs
        name: Check rST doc files exist for extmods
        entry: python bin/make-autodocs.py
        language: python
        pass_filenames: false

{!- endif !}

  - repo: local
    hooks:
      - id: slsdoc
        name: Dump state documentation with slsdoc
        entry: ./bin/slsdoc
        language: python
        require_serial: true
        always_run: true
        pass_filenames: false
        additional_dependencies:
          - toml
          - jinja2
  - repo: local
    hooks:
      - id: render_readme
        name: Render available states in README.rst.tpl
        entry: ./bin/render_readme
        language: system
        require_serial: true
        always_run: true
        pass_filenames: false
  - repo: https://github.com/rstcheck/rstcheck
    rev: v6.2.4
    hooks:
      - id: rstcheck
        name: Check reST files using rstcheck
        exclude: 'docs/CHANGELOG.rst'
        additional_dependencies: [sphinx==7.2.6]
