# vim: ft=sls

{%- set tplroot = tpldir.split("/")[0] %}
{%- from tplroot ~ "/map.jinja" import mapdata as {= abbr_pysafe =} with context %}


{%- if grains["os"] in ["Debian", "Ubuntu"] %}

Ensure {= service_name =} APT repository can be managed:
  pkg.installed:
    - pkgs:
      - python-apt                    # required by Salt
{%-   if "Ubuntu" == grains["os"] %}
      - python-software-properties    # to better support PPA repositories
{%-   endif %}
{%- endif %}

{%- for reponame in {= abbr_pysafe =}.lookup.pkg.enablerepo %}

{= service_name =} {{ reponame }} repository is available:
  pkgrepo.managed:
{%-   for conf, val in {= abbr_pysafe =}.lookup.pkg.repos[reponame].items() %}
    - {{ conf }}: {{ val }}
{%-   endfor %}
{%-   if {= abbr_pysafe =}.lookup.pkg.manager in ["dnf", "yum", "zypper"] %}
    - enabled: 1
{%-   endif %}
    - require_in:
      - {= service_name =} is installed
{%- endfor %}

{%- for reponame, repodata in {= abbr_pysafe =}.lookup.pkg.repos.items() %}

{%-   if reponame not in {= abbr_pysafe =}.lookup.pkg.enablerepo %}
{= service_name =} {{ reponame }} repository is disabled:
  pkgrepo.absent:
{%-     for conf in ["name", "ppa", "ppa_auth", "keyid", "keyid_ppa", "copr"] %}
{%-       if conf in repodata %}
    - {{ conf }}: {{ repodata[conf] }}
{%-       endif %}
{%-     endfor %}
    - require_in:
      - {= service_name =} is installed
{%-   endif %}
{%- endfor %}
