# vim: ft=sls

{#-
    Removes the configuration of the {= service_name =} {! if has_service !}service and has a
    dependency on `tool_{= abbr_pysafe =}.service.clean`_{! else !}package{! endif !}.
#}

{%- set tplroot = tpldir.split("/")[0] %}
{!- if has_service !}
{%- set sls_service_clean = tplroot ~ ".service.clean" %}
{!- endif !}
{%- from tplroot ~ "/map.jinja" import mapdata as {= abbr_pysafe =} with context %}

{!- if has_service !}

include:
  - {{ sls_service_clean }}
{!- endif !}


{%- for user in {= abbr_pysafe =}.users {! if has_config_template !}| selectattr("{= abbr_pysafe =}.config", "defined") | selectattr("{= abbr_pysafe =}.config") {! endif !}%}

{= service_name =} config file is cleaned for user '{{ user.name }}':
  file.absent:
    - name: {{ user["_{= abbr_pysafe =}"].conffile }}
{!- if has_service !}
    - require:
      - sls: {{ sls_service_clean }}
{!- endif !}

{!- if not has_conffile_only or has_xdg !}
{!-   if has_xdg and needs_xdg_help !}

{%-   if user.xdg %}
{!-   endif !}

{= service_name =} config dir is absent for user '{{ user.name }}':
  file.absent:
    - name: {{ user["_{= abbr_pysafe =}"].confdir }}
{!-   if has_xdg and needs_xdg_help !}
{%-   endif %}
{!-   endif !}
{!- endif !}
{%- endfor %}
