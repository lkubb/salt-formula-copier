---
author:
  type: str
  help: Your Github/Gitlab/... username that should be used as the author of the formula.
  placeholder: garyhost
  validator: '{!- if not author | trim !}Author cannot be empty{!- endif !}'

license:
  type: str
  help: Choose a license for the project
  default: apache
  choices:
    - apache
    - other

license_classifier:
  type: str
  help: The classifier for {= license =}. See https://pypi.org/classifiers.
  when: '{= license != "apache" =}'
  default: '{!- if license == "apache" !}License :: OSI Approved :: Apache Software License{!- endif !}'
  placeholder: '{!- if license != "apache" !}License :: OSI Approved :: Apache Software License{!- endif !}'
  validator: '{!- if " :: " not in license_classifier !}Invalid license classifier{!- endif !}'

license_name:
  type: str
  when: false
  default: '{= license_classifier.split(" :: ") | last =}'

url:
  type: str
  help: The project's homepage (usually the URL of the hosted repo)
  default: https://github.com/{= author | trim =}/salt-{= formula_name =}-formula
  validator: >-
    {!- if not url !}URL cannot be empty{!- endif !}
    {!- if "://" not in url -!}Does not look like a valid URL{!- endif !}

source_url:
  type: str
  help: The project's repo URL
  default: >-
    {!- if "github.com" in url -!}
      {= url =}
    {!- else -!}
      https://github.com/{= author | trim =}/salt-{= formula_name =}-formula
    {!- endif !}
  validator: >-
    {!- if "://" not in source_url -!}Does not look like a valid URL
    {!- endif !}

tracker_url:
  type: str
  help: The project's issue tracker URL
  default: >-
    {!- if "github.com" in source_url -!}
      {= source_url =}/issues
    {!- endif -!}
  validator: >-
    {!- if tracker_url and "://" not in tracker_url -!}Does not look like a valid URL
    {!- endif !}

deploy_docs:
  type: str
  help: >-
    When to automatically deploy CI built docs to GitHub Pages.
    Does not support versioned docs currently.
    Requires Settings > Pages > Build and deployment source to be `GitHub Actions`.
  default: 'rolling'
  choices:
    never: never
    when tagging a release: release
    all events on default branch (rolling): rolling
  when: '{= "github.com" in source_url =}'

docs_url:
  type: str
  help: The project's documentation URL (optional)
  default: >-
    {!- if deploy_docs != "never" -!}
      {!- set repo_parts = source_url.split("github.com/")[1].split("/") -!}
      {=- "https://{}.github.io/{}/".format(repo_parts[0], repo_parts[1]) -=}
    {!- endif -!}
  validator: >-
    {!- if docs_url and "://" not in docs_url -!}Does not look like a valid URL
    {!- endif !}

description:
  type: str
  help: A summary for project metadata and the readme
  default: >-
    {!- if flavor == "app" -!}
      Manage {= service_name =} inside the user environment with Salt
    {!- elif flavor == "compose" -!}
      Manage {= service_name =} with Salt and Podman
    {!- else -!}
      Manage {= service_name =} with Salt
    {!- endif -!}

salt_version:
  type: str
  help: Minimum Salt version to support
  default: '3006'

copyright_begin_init:
  type: int
  help: Copyright range beginning year
  default: '{= "%Y" | strftime =}'
  when: '{= copyright_begin_recorded is not defined =}'

copyright_begin:
  type: int
  when: false
  default: '{= copyright_begin_recorded if copyright_begin_recorded is defined else copyright_begin_init =}'
